<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <link rel="stylesheet" href="/assets/admin/dash.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

<!-- Bootstrap JavaScript Bundle (includes Popper) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <style>
      .main-content{
        background-image: url('https://i.pinimg.com/originals/65/a4/92/65a4926fa298b41211c57a7249e89cd5.jpg');
        height: 100%;
      }
      #chart-container {
          width: 80%;
          margin: auto;
          border-radius: 10px;
          background-color: rgb(253, 245, 244);

          box-shadow: 0 10px 18px rgba(21, 0, 0, 0.157);
          padding: 20px;
          
         
      }
      #filter-dropdown {
            margin-bottom: 20px;
            text-align: center;
        }
      
        #pie-chart-container {
            position: absolute;
            margin-top: 20px;
            
            width: 300px;
            height: 300px;
            margin-left: 125px;
            background-image: url('https://img.rawpixel.com/s3fs-private/rawpixel_images/website_content/rm218batch9-mynt-34.jpg?w=800&dpr=1&fit=default&crop=default&q=65&vib=3&con=3&usm=15&bg=F4F4F3&ixlib=js-2.2.1&s=73dfca7ca7fad2b3f3bb82846bbefda1');
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            padding: 10px;
            
        }

        #bar-chart-container {
        width: 400px;
        height: 300px;
        float: right;
        margin-top: 20px;
        margin-right: 20px;
        border-radius: 10px;
        background-color: rgb(253, 245, 244);

        box-shadow: 0 10px 18px rgba(21, 0, 0, 0.157);
        padding: 20px;
        
    }


  </style>
</head>
<body>
    <link
      href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css"
      rel="stylesheet"
    />  
    

    
   <nav class="sidebar">
      <header>
        <div class="image-text">
          <span class="image">
            <img src="/img/admin.png" alt="logo" />
          </span>
          <div class="text header-text">
            <span class="main">ADMIN</span>
            <br>
            <span class="sub">is now active</span>
          </div>
        </div>
      </header>

      <div class="menu-bar">
        <div class="menu">
          <ul class="menu-links">
            <li class="nav-link">
              <a href="/dash">
                <i class="bx bx-home-alt icons"></i>
                <span class="text nav-text">Dashboard</span>
              </a>
            </li>
            <li class="nav-link">
              <a href="/userAdmin">
                <i class='bx bxs-user-detail icons'></i>
                
                <span class="text nav-text">User Management</span>
              </a>
            </li>
            <li class="nav-link">
              <a href="/productManag">
                <i class='bx bx-cart-add icons'></i>
                <span class="text nav-text">Product Management</span>
              </a>
            </li>
            <li class="nav-link">
              <a href="/orderManage">
                <i class='bx bx-money-withdraw icons'></i>
                <span class="text nav-text">Order & Payments</span>
              </a>
            </li>
            <li class="nav-link">
              <a href="/salesReport">
                <i class='bx bxs-report icons'></i>
                <span class="text nav-text">Sales Report</span>
              </a>
            </li>
            <li class="nav-link">
              <a href="/coupon">
                <i class='bx bxs-coupon icons'></i>
                <span class="text nav-text">coupon</span>
              </a>
            </li>
            <!-- <li class="nav-link">
              <a href="#">
                <i class='bx bxs-sticker icons'></i>
                <span class="text nav-text">Banner</span>
              </a>
            </li> -->
          </ul>
        </div>

        <div class="bottom-content">
          <li class="nav-link">
            <a href="/adminLogin">
              <i class="bx bx-log-out icons"></i>
              <span class="text nav-text">Log Out</span>
            </a>
          </li>
          
          </li>
        </div>
      </div>
    </nav>
    <div class="main-content">
      
      <nav class="navbar" style="box-shadow: 2px 4px 8px rgba(0, 0, 0, 0.5);">

          <div class="navbar-left">
              <img src="/img/man-looking-at-computer.jpg" alt="Admin Image" class="admin-image">
              <div class="admin-details">
                  <p class="admin-name">Mohammad Anas AN</p>
                  <p class="admin-role">Administrator</p>
              </div>
          </div>
          <div class="navbar-right">
           
              
              <img src="/img/th.jpeg" alt="Indian Flag" class="indian-flag">
          </div>
          <div class="navCenter">
            <img src="/img/furniture-logo.jpg" alt="Admin Image" class="logo-img">
            <h3>DECORE COMPANY</h3>
          </div>
      </nav>
      <br>
      
      
      
     

      <!-- <h2 style="text-align: center;">Dashboard</h2> -->

      <div class="d-flex justify-content-between  align-items-center">
        <div style="text-align: center; margin-bottom: 10px;margin-left: 20px;">
            <label for="filter">Filter by:</label>
            <select id="filter" style="padding: 2px; border-radius: 5px; border: 1px solid #ced4da; background-color: #fff;">
                <option value="daily">Daily</option>
                <option value="monthly">Monthly</option>
                <option value="yearly">Yearly</option>
            </select>
        </div>
        <button type="button" class="btn btn-sm" data-bs-toggle="offcanvas" data-bs-target="#topSellingProductsOffcanvas" style="margin-right: 20px;background-color: rgb(183, 7, 7);color: aliceblue;box-shadow: 2px 4px 8px rgba(0, 0, 0, 0.5);">
          Top Sales
      </button>
    </div>
  
  <!-- Offcanvas to display top selling products -->
  <div class="offcanvas offcanvas-end" tabindex="-1" id="topSellingProductsOffcanvas" aria-labelledby="topSellingProductsOffcanvasLabel">
      <div class="offcanvas-header">
          <h5 class="offcanvas-title" id="topSellingProductsOffcanvasLabel">Top Selling Products</h5>
          <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close" ></button>
      </div>
      <div class="offcanvas-body" style="box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);">
          <!-- Display top selling products and their sales count here -->
          <ul>
            <% 
                topSellingProducts
                    .sort((a, b) => b.salesCount - a.salesCount) // Sort products by sales count in descending order
                    .forEach(product => { 
            %>
            <li class="list-group-item my-2 py-3 px-4 shadow-sm rounded">
                <div class="d-flex justify-content-between align-items-center">
                    <span><%= product.productName %></span>
                    <span class="badge bg-primary rounded-pill"><%= product.salesCount %> Sales</span>
                </div>
            </li>
            <% }); %>
        </ul>
      </div>
  </div>
      
      <div id="chart-container" >
        <canvas id="line-chart" style="width: 70%; height: 200px;"></canvas>
    </div>
    <div id="pie-chart-container">
      <canvas id="pie-chart"></canvas>
  </div>
  <div id="bar-chart-container" style="width: 700px; height: 300px; float: right;margin-right: 130px;">
    <canvas id="bar-chart"></canvas>
</div>

    


      <div class="bottom-content">
        <li class="nav-link">
            <a href="/adminLogin">
                <i class="bx bx-log-out icons"></i>
                <span class="text nav-text">Log Out</span>
            </a>
        </li>
    </div>
    <!-- <div class="offcanvas offcanvas-end" tabindex="-1" id="topSellingProductsOffcanvas" aria-labelledby="topSellingProductsOffcanvasLabel">
      <div class="offcanvas-header">
          <h5 class="offcanvas-title" id="topSellingProductsOffcanvasLabel">Top Selling Products</h5>
          <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
      </div>
      <div class="offcanvas-body">
          <ul id="topSellingProductsList" class="list-group">
              
          </ul>
      </div>
  </div> -->
  
    
  </div>

  
  
  <script>
    // Data for the chart (example)
    const totalPriceByDay = <%- JSON.stringify(totalPriceByDay) %>;

    // Define chart variable globally to keep track of the chart instance
    let myChart;

    // Function to update chart based on selected filter
    function updateChart(filter) {
        console.log('Filter:', filter);

        let filteredLabels, filteredData;

        switch (filter) {
            case 'daily':
                console.log('Daily filter selected');
                filteredLabels = totalPriceByDay.slice(-7).map(data => data._id);
                filteredData = totalPriceByDay.slice(-7).map(data => data.totalEarned);
                break;
            case 'monthly':
                console.log('Monthly filter selected');
                filteredLabels = [];
                filteredData = [];

                const monthlyData = {};
                totalPriceByDay.forEach(data => {
                    const [year, month] = data._id.split('-');
                    const key = `${year}-${month}`;
                    if (!monthlyData[key]) {
                        monthlyData[key] = [];
                    }
                    monthlyData[key].push(data.totalEarned);
                });

                console.log('Monthly Data:', monthlyData);

                for (const key in monthlyData) {
                    if (monthlyData.hasOwnProperty(key)) {
                        filteredLabels.push(key);
                        filteredData.push(monthlyData[key].reduce((acc, cur) => acc + cur, 0));
                    }
                }
                break;
            case 'yearly':
                console.log('Yearly filter selected');
                filteredLabels = [];
                filteredData = [];

                const yearlyData = {};
                totalPriceByDay.forEach(data => {
                    const year = data._id.split('-')[0];
                    if (!yearlyData[year]) {
                        yearlyData[year] = [];
                    }
                    yearlyData[year].push(data.totalEarned);
                });

                console.log('Yearly Data:', yearlyData);

                for (const year in yearlyData) {
                    if (yearlyData.hasOwnProperty(year)) {
                        filteredLabels.push(year);
                        filteredData.push(yearlyData[year].reduce((acc, cur) => acc + cur, 0));
                    }
                }
                break;
            default:
                // No filter applied
                filteredLabels = totalPriceByDay.map(data => data._id);
                filteredData = totalPriceByDay.map(data => data.totalEarned);
        }

        console.log('Filtered Labels:', filteredLabels);
        console.log('Filtered Data:', filteredData);

        // If myChart exists, destroy it to clear the canvas
        if (myChart) {
            myChart.destroy();
        }

        // Update chart with filtered data
        const ctx = document.getElementById('line-chart').getContext('2d');
        myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: filteredLabels,
                datasets: [{
                    label: 'Total Price Earned',
                    data: filteredData,
                    borderColor: 'maroon',
                    borderWidth: 3,
                    pointBackgroundColor: 'white',
                    fill: false
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                },
                responsive: true,
                maintainAspectRatio: false
            }
        });
    }

    // Event listener for dropdown change
    document.getElementById('filter').addEventListener('change', function() {
        const filter = this.value;
        updateChart(filter); // Call updateChart function with selected filter
    });

    // Initial chart rendering
    updateChart('daily'); // Render chart with default filter (e.g., daily)

    const labels = <%- JSON.stringify(labels) %>;
        const data = <%- JSON.stringify(data) %>;

        const pieCtx = document.getElementById('pie-chart').getContext('2d');
        const pieChart = new Chart(pieCtx, {
            type: 'pie',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Status Counts',
                    data: data,
                    backgroundColor: ['#ff6384', '#36a2eb', '#ffce56', '#4bc0c0', '#9966ff','maroon'],
                    borderWidth: 0
                }]
            },
            options: {
                legend: {
                    position: 'right'
                },
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    datalabels: {
                        formatter: (value, ctx) => {
                            const label = ctx.chart.data.labels[ctx.dataIndex];
                            const count = ctx.chart.data.datasets[0].data[ctx.dataIndex];
                            return `${label}: ${count}`;
                        }
                    }
                }
            }
        });



        //barchart

        const barCtx = document.getElementById('bar-chart').getContext('2d');
    const barChart = new Chart(barCtx, {
        type: 'bar',
        data: {
            labels: <%- JSON.stringify(barLabels) %>,
            datasets: [{
                label: 'Products Ordered Per Day',
                data: <%- JSON.stringify(barData) %>,
                backgroundColor: createGradient(barCtx,['#fcb7b7fc', 'maroon']), // Gradient colors
                borderWidth: 1,
                borderColor: '#333',
                hoverBorderWidth: 2,
                hoverBorderColor: '#000'
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            },
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                datalabels: {
                    anchor: 'end',
                    align: 'top',
                    color: '#333',
                    font: {
                        size: 14,
                        weight: 'bold'
                    },
                    formatter: function(value, context) {
                        return value > 0 ? value : ''; // Display value only if greater than 0
                    }
                }
            }
        }
    });

    // Function to create gradient colors for bars
    function createGradient(context, colors) {
        const gradient = context.createLinearGradient(0, 0, 0, 300);
        gradient.addColorStop(0, colors[0]);
        gradient.addColorStop(1, colors[1]);
        return gradient;
    }

    
</script>
    
</body>
</html>